{"version":3,"file":"assets/BusinessCa13.js","sources":["webpack:///./src/com/didichuxing/ultron/modules/businessCapacity/ModelBusinessCapacity.ts"],"sourcesContent":["import { AModuleModel } from 'com/didichuxing/commonInterface/AModuleModel';\nimport {action, observable} from 'mobx';\nimport { BusinessCapacityParams } from '@ultron/remote/testPressure';\nexport interface ICreateWorkOrderQuery {\n    type: string;\n}\n\n/**\n * 压测大盘\n */\n\nexport default class ModelBusinessCapacityConfig extends AModuleModel implements ICreateWorkOrderQuery {\n    @observable public type: string = 'aa';\n    @observable public proportion: number = 0;\n    @observable public difference: any[] = [];\n    @observable public params: any[] = [];\n    @observable public colorAny: any[] = [];\n    @observable public dataChartAver: any = {};\n    @observable public loading: boolean = true;\n    @observable public leftPadding: number = 0;\n    @observable public rightPadding: number = 0;\n    constructor(query?: ICreateWorkOrderQuery, S?: string) {\n        super();\n        this.getPadding();\n        this.initByQueryFields(query);\n        this.loadDataList();\n        window.onresize = () => {\n            this.getPadding();\n        };\n    }\n    protected getQueryFields(): Array<keyof ICreateWorkOrderQuery> {\n        return ['type'];\n    }\n    protected getPadding(): void {\n        const clientWidth: any = document.documentElement;\n        if (clientWidth.clientWidth % 350 - 20) {\n            this.rightPadding = (clientWidth.clientWidth % 350 - 20) / 2;\n            this.leftPadding = (clientWidth.clientWidth % 350 - 20) / 2 + 20;\n        } else {\n            this.rightPadding = (clientWidth.clientWidth % 350 + 350 - 20) / 2;\n            this.leftPadding = (clientWidth.clientWidth % 350 + 350 - 20) / 2 + 20;\n        }\n    }\n    public createOption(obj) {\n        let axisLineColor: any[] = [];\n        switch (true) {\n            case obj['ratio'] < 0.6:\n            axisLineColor = [[obj['ratio'].toFixed(1), '#FE0000'], [1, '#E4E8EB']];\n            break;\n            case obj['ratio'] >= 0.6 && obj['ratio'] < 1:\n            axisLineColor = [[obj['ratio'].toFixed(1), '#FA8919'], [1, '#E4E8EB']];\n            break;\n            default:\n            axisLineColor = [[1, '#11A699']];\n            break;\n\n        }\n        const option = {\n            title: {\n                text: '达标率',\n                textStyle: {\n                    fontSize: 12,\n                    color: '#CDCDCD'\n                },\n                left: 55,\n                bottom: 58\n            },\n            toolbox: {\n                show : true,\n                feature : {\n                    mark : {show: true}\n                }\n            },\n            series: [\n                {\n                    name: '容量指标',\n                    type: 'gauge',\n                    detail : {\n                        formatter: '{value}%',\n                        fontSize: 25,\n                        fontWeight: 500,\n                        offsetCenter: [0, 17],\n                        color: axisLineColor[0][1]\n                    },\n                    pointer : {\n                        show: false\n                    },\n                    startAngle: 200,\n                    endAngle: -25,\n                    radius: [65],\n                    center: ['43%', 70],\n                    splitNumber: 10,       // 分割段数，默认为5\n                    axisLine: {            // 坐标轴线\n                        lineStyle: {       // 属性lineStyle控制线条样式\n                            color: axisLineColor,\n                            width: 10\n                        }\n                    },\n                    axisTick: {            // 坐标轴小标记\n                        splitNumber: 10,   // 每份split细分多少段\n                        length : 0         // 属性length控制线长\n                    },\n                    axisLabel: {\n                        show: false         // 坐标轴文本标签，详见axis.axisLabel\n                    },\n                    splitLine: {           // 分隔线\n                        show: true,        // 默认显示，属性show控制显示与否\n                        length : 0         // 属性length控制线长\n                    },\n                    data: [\n                            {\n                                value: Math.round(obj['ratio'] * 100)\n                            }\n                    ]\n                }\n            ]\n        };\n        return option;\n    }\n\n    private async loadDataList(): Promise<void> {\n        try {\n            const result = await BusinessCapacityParams({});\n            this.loading = false;\n            this.params = result;\n        } catch { }\n    }\n}\n"],"mappings":"AAWA","sourceRoot":""}