{"version":3,"file":"assets/ServiceCap14.js","sources":["webpack:///./src/com/didichuxing/ultron/modules/serviceCapacity/ModelServiceCapacity.ts"],"sourcesContent":["\nimport { AModuleModel } from 'com/didichuxing/commonInterface/AModuleModel';\nimport {action, observable} from 'mobx';\nimport { ServiceCapacityParams } from '@ultron/remote/testPressure';\nexport interface ICreateWorkOrderQuery {\n    type: string;\n}\n\n/**\n * 压测大盘\n */\nexport default class ModelpressureTestMarketConfig extends AModuleModel implements ICreateWorkOrderQuery {\n    @observable public type: string = 'aa';\n    @observable public proportion: number = 0;\n    @observable public difference: any[] = [];\n    @observable public params: any[] = [];\n    @observable public colorAny: any[] = [];\n    @observable public dataChartAver: any = {};\n    constructor(query?: ICreateWorkOrderQuery, S?: string) {\n        super();\n        this.initByQueryFields(query);\n        this.loadDataList();\n    }\n    protected getQueryFields(): Array<keyof ICreateWorkOrderQuery> {\n        return ['type'];\n    }\n    @action\n    public createOption(obj) {\n        this.proportion = Number(obj.two / obj.one);\n        if (!obj.three) {\n            obj.three = '';\n        }\n        if (obj.one === 0 || (obj.two > obj.one)) {\n            this.difference = [\n                {value: obj.two, name: ''},\n                {value: 0, name: ''}\n            ];\n        } else {\n            this.difference = [\n                {value: obj.two, name: ''},\n                {value: obj.one - obj.two, name: ''}\n            ];\n        }\n        if (obj.one === 0 || obj.two === 0) {\n            this.colorAny = ['#f44', '#f44'];\n        } else if (this.proportion <= 0.5) {\n            this.colorAny = ['#f44', '#f2f2f2'];\n        } else if (this.proportion <= 0.9) {\n            this.colorAny = ['#ef941a', '#f2f2f2'];\n        } else if (this.proportion > 0.9) {\n            this.colorAny = ['#393', '#f2f2f2'];\n        }\n        const option = {\n            graphic: {\n                type: 'text',\n                left: 'center',\n                top: 'center',\n                z: 2,\n                zlevel: 100,\n                style: {\n                    text:  '实际容量' + '\\n\\n' + obj.two  + '\\n\\n' + obj.three,\n                    x: 100,\n                    y: 100,\n                    textAlign: 'center',\n                    width: 30,\n                    height: 30\n                }\n            },\n            series: [\n                {\n                    name: '访问来源',\n                    type: 'pie',\n                    radius: ['60%', '70%'],\n                    color: this.colorAny,\n                    avoidLabelOverlap: false,\n                    label: {\n                        normal: {\n                            show: false,\n                            position: 'center'\n                        },\n                        emphasis: {\n                            show: true,\n                            textStyle: {\n                                fontSize: '30',\n                                fontWeight: 'bold'\n                            }\n                        }\n                    },\n                    labelLine: {\n                        normal: {\n                            show: false\n                        }\n                    },\n                    data: this.difference\n                }\n            ]\n        };\n        return option;\n    }\n\n    private async loadDataList(): Promise<void> {\n        try {\n            const result = await ServiceCapacityParams({});\n            this.params = result;\n        } catch { }\n    }\n}\n"],"mappings":"AAWA","sourceRoot":""}